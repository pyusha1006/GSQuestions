// Java program to find minimum number of
// flip to make binary string alternate
class GFG 
{                                                                       //Time Complexity: O(n)
    public static char flip(char ch)
    {
        return (ch == '0') ? '1' : '0';
    }
      
    public static int getFlipWithStartingCharcter(String str,
                                    char expected)
    {
        int flipCount = 0;
        for (int i = 0; i < str.length(); i++)
        {
            if (str.charAt(i) != expected)                                    //at a time checking whether the char at position is equal 
                flipCount++;                                                  // to the expected value.
      
            expected = flip(expected);                                        // passing expected var to a method that converts 0 to 1
        }                                                                     // and vice-versa.
        return flipCount;
    }
      
    public static int minFlipToMakeStringAlternate(String str)
    {
        //  return minimum of following two
        //  1) flips when alternate string starts with 0
        //  2) flips when alternate string starts with 1
        return Math.min(getFlipWithStartingCharcter(str, '0'),
                   getFlipWithStartingCharcter(str, '1'));
    }
      
    public static void main(String args[])
    {
        String str = "0001010111";
        System.out.println(minFlipToMakeStringAlternate(str));
    }
}
